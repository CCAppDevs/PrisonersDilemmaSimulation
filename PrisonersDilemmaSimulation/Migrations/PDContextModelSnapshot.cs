// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrisonersDilemmaSimulation;

#nullable disable

namespace PrisonersDilemmaSimulation.Migrations
{
    [DbContext(typeof(PDContext))]
    partial class PDContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PrisonersDilemmaSimulation.Models.MatchRecord", b =>
                {
                    b.Property<int>("MatchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MatchID"));

                    b.Property<int>("Player1Id")
                        .HasColumnType("int");

                    b.Property<int>("Player2Id")
                        .HasColumnType("int");

                    b.HasKey("MatchID");

                    b.HasIndex("Player1Id");

                    b.HasIndex("Player2Id");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("PrisonersDilemmaSimulation.Models.Strategy", b =>
                {
                    b.Property<int>("StrategyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StrategyID"));

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrategyDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrategyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StrategyID");

                    b.ToTable("Strategies");
                });

            modelBuilder.Entity("PrisonersDilemmaSimulation.Models.TossRecord", b =>
                {
                    b.Property<int>("TossID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TossID"));

                    b.Property<int>("MatchID")
                        .HasColumnType("int");

                    b.Property<string>("OpponentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerGuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PointsEarnedThisToss")
                        .HasColumnType("int");

                    b.Property<int>("PointsTotal")
                        .HasColumnType("int");

                    b.Property<int>("TossNumber")
                        .HasColumnType("int");

                    b.Property<int>("TossResult")
                        .HasColumnType("int");

                    b.HasKey("TossID");

                    b.HasIndex("MatchID");

                    b.ToTable("TossRecord");
                });

            modelBuilder.Entity("PrisonersDilemmaSimulation.Models.MatchRecord", b =>
                {
                    b.HasOne("PrisonersDilemmaSimulation.Models.Strategy", "Player1")
                        .WithMany()
                        .HasForeignKey("Player1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrisonersDilemmaSimulation.Models.Strategy", "Player2")
                        .WithMany()
                        .HasForeignKey("Player2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player1");

                    b.Navigation("Player2");
                });

            modelBuilder.Entity("PrisonersDilemmaSimulation.Models.TossRecord", b =>
                {
                    b.HasOne("PrisonersDilemmaSimulation.Models.MatchRecord", "Match")
                        .WithMany("Tosses")
                        .HasForeignKey("MatchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Match");
                });

            modelBuilder.Entity("PrisonersDilemmaSimulation.Models.MatchRecord", b =>
                {
                    b.Navigation("Tosses");
                });
#pragma warning restore 612, 618
        }
    }
}
